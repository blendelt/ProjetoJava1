/********** check style **********/
.typebot-host-bubble {
    padding-right: 12px;
}

#checkIcon {
    stroke-dasharray: 40;
    stroke-dashoffset: 40;
    z-index: 99;
}

#checkIcon path:nth-child(1) {  
    animation: showIcon 250ms ease forwards;
    animation-delay: 500ms;
}

#checkIcon path:nth-child(2) {  
    animation: showIcon 250ms ease forwards;
    animation-delay: 400ms;
}

@keyframes showIcon {
    to { stroke-dashoffset: 0 };
}
/********** check style **********/

.typebot-chat-view > .flex:first-child {
    padding-top: 50px;
    padding-bottom: 50px;
}

.typebot-container {
    background-size: initial!important;
    background-repeat: repeat-x!important;
}

.typebot-host-bubble>.bubble-typing {
    border-radius: 0 5px 5px 5px;
}

.typebot-host-bubble>.bubble-typing:after {
    position: absolute;
    content: "";
    width: 0;
    height: 0;
    border-style: solid;
    border-width: 0px 10px 10px 0;
    border-color: transparent #fff transparent transparent;
    top: 0;
    left: -10px;
}

.typebot-guest-bubble {
    position: relative;
    border-radius: 5px 0 5px 5px;
}

.typebot-guest-bubble:after {
    position: absolute;
    content: "";
    width: 0;
    height: 0;
    border-style: solid;
}

.typebot-guest-bubble:after {
    border-width: 0px 0 10px 10px;
    border-color: transparent transparent transparent #e1ffc7;
    top: 0;
    right: -10px;
    border-style: solid;
}

iframe[src=""] {
    position: fixed;
    top: 0;
    left: 0;
    display: relative;
    width: 100%;
    height: 100% !important;
    z-index: 999999;
    border: none;
    padding: 0;
    margin: 0;
}

a#lite-badge {
    display: none!important;
}

/* Botão do input */
.typebot-input .typebot-button {
    content: "";
    background: rgba(0, 138, 134, 1);
    border-radius: 50%; 
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 50px; 
    height: 50px; 
    border: none;
    font-size: 0px;
    color: transparent;
}

.typebot-input .typebot-button::before {
    content: "";
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    width: 25px;
    height: 25px;
    background-repeat: no-repeat;
    background-size: cover;
    background-image: url('data:image/svg+xml;charset=utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" width="19px"><path d="M476.59 227.05l-.16-.07L49.35 49.84A23.56 23.56 0 0027.14 52 24.65 24.65 0 0016 72.59v113.29a24 24 0 0019.52 23.57l232.93 43.07a4 4 0 010 7.86L35.53 303.45A24 24 0 0016 327v113.31A23.57 23.57 0 0026.59 460a23.94 23.94 0 0013.22 4 24.55 24.55 0 009.52-1.93L476.4 285.94l.19-.09a32 32 0 000-58.8z" fill="white"/></svg>');
}

/* Oculta o ícone anterior*/
.typebot-input .typebot-button .send-icon {
    display: none; 
}

/* Corrigir cor do botão */
.disabled\:opacity-50:disabled {
    opacity: 100%;
}

/* Mensagem ao clicar no ícone */
.call-message {
    display: none;
    position: absolute;
    background-color: rgba(0, 0, 0, 0.8);
    color: white;
    padding: 10px;
    border-radius: 5px;
    font-size: 14px;
    max-width: 200px;
    text-align: center;
    z-index: 1000;
    animation: fade-in 0.3s ease-in-out;
}

@keyframes fade-in {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}
Javascript-escritor

Copiar código
// Adicionando a interação para os ícones de ligação
document.querySelectorAll('.call-icon').forEach(icon => {
    icon.addEventListener('click', function () {
        // Criar a mensagem dinamicamente
        const message = document.createElement('div');
        message.classList.add('call-message');
        message.textContent = 'Não é possível ligar para este contato';

        // Adicionar a mensagem ao DOM
        document.body.appendChild(message);

        // Posicionar a mensagem próximo ao ícone
        const rect = icon.getBoundingClientRect();
        message.style.top = `${rect.bottom + 10}px`;
        message.style.left = `${rect.left}px`;

        // Mostrar a mensagem e removê-la após 3 segundos
        message.style.display = 'block';
        setTimeout(() => {
            message.remove();
        }, 3000);
    });
});
